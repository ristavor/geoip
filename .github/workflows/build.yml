name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "30 0 * * 4"
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "LICENSE*"
      - "*.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Loyalsoldier/geoip
        uses: actions/checkout@v4
        with:
          repository: Loyalsoldier/geoip
          path: geoip
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./geoip/go.mod

      - name: Set variables
        run: |
          echo "RELEASE_NAME=geoip" >> $GITHUB_ENV
          echo "TAG_NAME=geoip" >> $GITHUB_ENV
        shell: bash

      - name: Build geoip files
        run: |
          go build -C geoip ./
          ./geoip/geoip convert -c ./config.json

      - name: Verify mmdb files
        run: |
          cd ./output || exit 1
          go install -v github.com/maxmind/mmdbverify@latest
          for name in $(ls *.mmdb); do
            $(go env GOPATH)/bin/mmdbverify -file ${name}
          done

      - name: Generate sha256 checksum for dat files
        run: |
          cd ./output || exit 1
          for name in $(ls *.dat); do
            sha256sum ${name} > ./${name}.sha256sum
          done

      - name: Generate sha256 checksum for mmdb files
        run: |
          cd ./output || exit 1
          for name in $(ls *.mmdb); do
            sha256sum ${name} > ./${name}.sha256sum
          done

      - name: Remove ненужные файлы перед релизом
        run: |
          rm -rf ./output/*.{gz,zip}
          rm -rf ./output/GeoLite2-*.csv
          rm -rf ./output/GeoLite2-*.mmdb
          rm -rf ./output/GeoLite2-*.sha256sum
          rm -rf ./output/{clash,dat,mrs,nginx,srs,surge,text}
          # Предполагается, что после удаления останется только geoip.dat
        shell: bash

      - name: Upload geoip.dat to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          files: ./output/geoip.dat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
